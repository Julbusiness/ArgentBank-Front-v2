swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Returns a list of transactions
      description: API for fetching a user transactions. Return tranctions for the current month if no tags provided
      parameters:
        - in: query
          name: Date
          description: Filter transactions by date
          required: false
          type: string
          format: JJ/MM/AAAA
        - in: query
          name: Description
          description: Filter transactions by description
          required: false
          type: string
        - in: query
          name: Amount
          description: Filter transactions by amount
          required: false
          type: number
        - in: query
          name: Balance
          description: Filter transactions by balance
          required: false
          type: number
        - in: body
          name: body
          description: transactions filter
          required: true
          schema:
            $ref: '#/definitions/UserTransactions'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved transactions successully
          schema:
            $ref: '#/definitions/UserTransactions'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Create a transaction
      description: API for fetching and create a transaction
      parameters:
        - in: body
          name: body
          description: create transaction details attributes
          required: true
          schema:
            $ref: '#/definitions/UserTransactionDetails'
      produces:
        - application/json
      responses:
        '201':
          description: User created transaction details successully
          schema:
            $ref: '#/definitions/UserTransactionDetails'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Return a transaction by id
      description: API for fetching a transaction
      parameters:
        - name: id
          type: integer 
          in: path
          description: Transaction ID
          required: true
        - in: body
          name: body
          description: transactions filter
          required: true
          schema:
            $ref: '#/definitions/UserTransactionDetails'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved transactions successully
          schema:
            $ref: '#/definitions/UserTransactionDetails'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Update a transaction by id
      description: API for updating a transaction details. Only type, category et notes are updateable
      parameters:
        - name: id
          type: integer 
          in: path
          description: Transaction ID
          required: true
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionId'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated transaction details successully
          schema:
            $ref: '#/definitions/TransactionId'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Delete a transaction by id
      description: API for deleting a transaction details
      parameters:
        - name: id
          type: integer 
          in: path
          description: Transaction ID
          required: true
      produces:
        - application/json
      responses:
        '204':
          description: User profile deleted transaction details successully
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  UserTransactions:
    type: array
    items: 
      type: object
      properties:
        id: 
          type: number
        accountId: 
          type: number 
        date: 
          type: string
        description:
          type: string
        amount: 
          type: number
        balance: 
          type: number
  TransactionId:
    type: object
    properties:
      type: 
        type: string
      category:
        type: string
      notes:
        type: string
  UserTransactionDetails:
      type: object
      properties:
        id: 
          type: number
        accountId: 
          type: number 
        date: 
          type: string
        description:
          type: string
        amount: 
          type: number
        balance: 
          type: number
        transactionType:
          type: string
        category:
          type: string
        notes:
          type: string
